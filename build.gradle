import org.ajoberstar.grgit.Grgit

buildscript {
  apply from: "dependencies/versions.gradle"

  addRepos(repositories)
  dependencies {
    classpath deps.android_gradle_plugin
    classpath deps.grgit
  }
}

allprojects {
  def git = Grgit.open(currentDir: projectDir)
  addGitVersion(git.describe(), git.tag.list().size())

  addRepos(repositories)
}

subprojects {
  def isModule = false
//   def isAppModule = isModule || it.name.equals("app")
  def isAppModule = false
  def dataBindingModules = ["app"]
  //使用dataBinding的模块
  def enableDataBinding = dataBindingModules.contains(it.name)

  apply plugin: isAppModule ? 'com.android.application' : 'com.android.library'

  android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
      if(isAppModule) applicationId "com.hello"
      minSdkVersion build_versions.min_sdk
      targetSdkVersion build_versions.target_sdk

      versionCode build_versions.androidVersionCode
      versionName build_versions.androidVersionName
      testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
      multiDexEnabled true
      vectorDrawables.useSupportLibrary = true //drawable支持
    }
    buildTypes {
      debug {
        proguardFiles getDefaultProguardFile('proguard-android.txt'), '../dependecies/proguard-rules-debug.pro'
        minifyEnabled true
        zipAlignEnabled true
        jniDebuggable true
      }
      release {
        minifyEnabled true
        proguardFiles getDefaultProguardFile('proguard-android.txt'), '../dependecies/proguard-rules.pro'
      }
    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }

    if (enableDataBinding) {
      dataBinding {
        enabled true
      }
    }
  }

}

task clean(type: Delete) {
  delete rootProject.buildDir
}
